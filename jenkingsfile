pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                // Perform the cleanup step here
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }

        stage('Clone') {
            steps {
                // Perform the clone step here
                sh 'echo "Cloning..."'
                sh 'git clone https://github.com/oksthefox/flask.git'
                sh 'ls'
            }
        }

        stage('Build') {
            steps {
                // Perform the build step here
                sh 'echo "Building..."'
                sh 'echo "Packaging..."'
                sh 'tar -czvf MyFlask.tar.gz flask'
                sh 'ls'
            }
        }

        stage("Upload to S3") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws_key',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp MyFlask.tar.gz s3://oksana-sela/flaskproject/'
                }
            }
        }

        stage("Test") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws_key',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    // Copy the tar file from S3 to the current directory
                    sh 'aws s3 cp s3://oksana-sela/flaskproject/MyFlask.tar.gz .'

                    // Extract the contents of the tar file
                    sh 'tar -xzvf MyFlask.tar.gz'

                    // Upload the extracted files to S3
                    sh 'aws s3 cp flask/ s3://oksana-sela/flaskproject/ --recursive'

                    // SSH into the EC2 instance
                    // You'll need to replace the `EC2_INSTANCE_IP` with the actual IP address of your EC2 instance
                    sh 'ssh -i /path/to/your/oks.pem ec2-user@13.48.1.52<< EOF
                        cd /home/ec2-user/JenkinsProject
                        source venv/bin/activate
                        pip install -r requirements.txt
                        python app.py &
                        exit
                    EOF'
                }
            }
        }
    }
}
