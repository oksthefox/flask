pipeline {
    agent any
    triggers {
        pollSCM('*/5 * * * *')
    }

    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup..."'
                sh 'rm -rf *'
            }
        }

        stage('Clone') {
            steps {
                sh 'echo "Building..."'
                sh 'git clone https://github.com/oksthefox/flask.git'
                sh 'ls'
            }
        }

        stage('Build') {
            steps {
                sh 'echo "Building..."'
                sh 'echo "packaging"'
                sh 'tar -czvf MyFlask.tar.gz flask'
                sh 'ls'
            }
        }

        stage("Upload to S3") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws_key',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp MyFlask.tar.gz s3://oksana-sela/flaskproject/'
                }
            }
        }

        stage("Test") {
            steps {
                withCredentials([
                    [
                        $class: 'AmazonWebServicesCredentialsBinding',
                        credentialsId: 'aws_key',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    sh 'aws s3 cp s3://oksana-sela/flaskproject/MyFlask.tar.gz .'
                    sh 'tar -xzvf MyFlask.tar.gz'
                    sh 'aws s3 cp extracted_folder/ s3://oksana-sela/flaskproject/ --recursive'
                    sh 'ssh -i /home/oksana/Desktop/AnsibleProject/privatekeys/key.pem ec2-user@13.48.1.52 << EOF\n' +
                       'cd /home/ec2-user/JenkinsProject\n' +
                       'source venv/bin/activate\n' +
                       'pip install -r requirements.txt\n' +
                       'python app.py &\n' +
                       'EOF'
                }
            }
        }
    }
}

